/* eax=0x00000001; ecx */
feature(sse3,            1, 0, ecx, 0, "Streaming SIMD Extensions 3 (SSE3)")
feature(pclmulqdq,       1, 0, ecx, 1, "GF(2^k) Carry-less multiplication")
feature(dtes64,          1, 0, ecx, 2, "64-bit DS Area")
feature(monitor,         1, 0, ecx, 3, "MONITOR/MWAIT instructions")
feature(dscpl,           1, 0, ecx, 4, "CPL Qualified Debug Store")
feature(vmx,             1, 0, ecx, 5, "Virtual Machine Extensions")
feature(smx,             1, 0, ecx, 6, "Safer Mode Exentions")
feature(est,             1, 0, ecx, 7, "Enhanced SpeedStep Technology")
feature(tm2,             1, 0, ecx, 8, "Thermal Monitor 2")
feature(ssse3,           1, 0, ecx, 9, "Supplemental Streaming SIMD Extensions 3")
feature(cnxt_id,         1, 0, ecx, 10, "L1 Context ID")
feature(sdbg,            1, 0, ecx, 11, "Silicon Debug")
feature(fma,             1, 0, ecx, 12, "Fused Multiply Add")
feature(cmpxchg16b,      1, 0, ecx, 13, "CMPXCHG16B instruction")
feature(xtpr,            1, 0, ecx, 14, "xTPR Update Control")
feature(pdcm,            1, 0, ecx, 15, "Perfmon and Debug Capability")
feature(pcid,            1, 0, ecx, 17, "Process Context Identifiers")
feature(dca,             1, 0, ecx, 18, "Direct cache access for DMA writes")
feature(sse4_1,          1, 0, ecx, 19, "SSE4.1 instructions")
feature(sse4_2,          1, 0, ecx, 20, "SSE4.2 instructions")
feature(x2apic,          1, 0, ecx, 21, "x2APIC support")
feature(movbe,           1, 0, ecx, 22, "MOVBE instruction")
feature(popcnt,          1, 0, ecx, 23, "POPCNT instruction")
feature(tscdt,           1, 0, ecx, 24, "TSC Deadline Timer")
feature(aesni,           1, 0, ecx, 25, "AESNI instructions")
feature(xsave,           1, 0, ecx, 26, "XSAVE/XRSTOR/XSETBV/XGETBV and XCR0")
feature(osxsave,         1, 0, ecx, 27, "CR4.OSXSAVE enabled to support XSAVE/XRSTOR")
feature(avx,             1, 0, ecx, 28, "AVX instruction extensions")
feature(f16c,            1, 0, ecx, 29, "16-bit floating-point conversion instructions")
feature(rdrnd,           1, 0, ecx, 30, "RDRAND instruction")
feature(hv,              1, 0, ecx, 31, "Running in Hypervisor")

/* eax=0x00000001; edx */
feature(fpu,             1, 0, edx, 0, "x87 FPU")
feature(vme,             1, 0, edx, 1, "Virtual 8086 mode extensions")
feature(de,              1, 0, edx, 2, "Debugging extensions (CR4.DE)")
feature(pse,             1, 0, edx, 3, "Page Size Extension")
feature(tsc,             1, 0, edx, 4, "Time Stamp Counter")
feature(msr,             1, 0, edx, 5, "Model-specific Registers")
feature(pae,             1, 0, edx, 6, "Physical Address Extensions")
feature(mce,             1, 0, edx, 7, "Machine Check Excdeptions")
feature(cx8,             1, 0, edx, 8, "Compare and Swap instructions")
feature(apic,            1, 0, edx, 9, "Advanced Programmable Interrupt Controller")
feature(sep,             1, 0, edx, 11, "SYSENTER and SYSEXIT instructions")
feature(mtrr,            1, 0, edx, 12, "Memory Type Range Registers")
feature(pge,             1, 0, edx, 13, "Page Global bit (CR4.PGE)")
feature(mca,             1, 0, edx, 14, "Machine Check Architecture")
feature(cmov,            1, 0, edx, 15, "Conditional Move Instruction")
feature(pat,             1, 0, edx, 16, "Page Attribute Table")
feature(pse36,           1, 0, edx, 17, "36-Bit Page Size Extension (4MiB pages)")
feature(psn,             1, 0, edx, 18, "Processor Serial Number")
feature(clflush,         1, 0, edx, 19, "CLFLUSH instruction")
feature(acpi,            1, 0, edx, 22, "Thermal Monitor and Clock MSRs")
feature(mmx,             1, 0, edx, 23, "MMX instructions")
feature(fxsr,            1, 0, edx, 24, "FXSAVE, FXRESTOR instructions (CR4.OSFXSR)")
feature(sse,             1, 0, edx, 25, "SSE instructions")
feature(sse2,            1, 0, edx, 26, "SSE2 instructions")
feature(ss,              1, 0, edx, 27, "CPU cache supports self-snoop")
feature(htt,             1, 0, edx, 28, "Max APIC IDs reserved field is valid")
feature(tm,              1, 0, edx, 29, "Thermal monitor limits temperature")
feature(pbe,             1, 0, edx, 31, "Pending Break Enable")

/* eax=0x00000006; eax */
feature(dts,             6, 0, eax, 0, "Digital temperature sensor")
feature(tbt,             6, 0, eax, 1, "Turbo Boost Technology available")
feature(arat,            6, 0, eax, 2, "APIC-Timer-always-running feature")
feature(pln,             6, 0, eax, 4, "Power limit notification controls are supported")
feature(ecmd,            6, 0, eax, 5, "Clock modulation duty cycle extension")
feature(ptm,             6, 0, eax, 6, "Package thermal management")
feature(hwp,             6, 0, eax, 7, "HWP base registers are supported")
feature(hwp_notif,       6, 0, eax, 8, "HWP_Notification")
feature(hwp_actwin,      6, 0, eax, 9, "HWP_Activity_Window")
feature(hwp_eperf,       6, 0, eax, 10, "HWP_Energy_Performance_Preference")
feature(hwp_pkg,         6, 0, eax, 11, "HWP_Package_Level_Request")
feature(hdc,             6, 0, eax, 13, "HDC base registers are supported")
feature(tbt3,            6, 0, eax, 14, "Turbo Boost Max Technology 3.0")
feature(hwp_cap,         6, 0, eax, 15, "HWP Capabilities")
feature(hwp_peci,        6, 0, eax, 16, "HWP PECI override")
feature(hwp_flex,        6, 0, eax, 17, "Flexible HWP")
feature(hwp_fam,         6, 0, eax, 18, "HWP Fast access mode")
feature(hwp_feedback,    6, 0, eax, 19, "HW_FEEDBACK registers are supported")
feature(hwp_idle,        6, 0, eax, 20, "Ignoring Idle Logical Processor HWP request")
feature(thread_dir,      6, 0, eax, 23, "Thread Director supported")
feature(therm_intr,      6, 0, eax, 24, "IA32_THERM_INTERRUPT MSR bit 25")

/* eax=0x00000007; ebx */
feature(fsgsbase,        7, 0, ebx, 0, "Access to FS and GS MSRs")
feature(tsc_adj,         7, 0, ebx, 1, "TSC adjust MSR")
feature(sgx,             7, 0, ebx, 2, "Sotware Guard Extensions")
feature(bmi1,            7, 0, ebx, 3, "Bit Manipulation Instruction Set 1")
feature(hle,             7, 0, ebx, 4, "Hardware Lock Elision")
feature(avx2,            7, 0, ebx, 5, "Advanced Vector Extensions 2")
feature(smep,            7, 0, ebx, 7, "Supervisor-Mode Execution Prevention")
feature(bmi2,            7, 0, ebx, 8, "Bit Manipulation Instruction Set 2")
feature(erms,            7, 0, ebx, 9, "Enhanced REP MOVSB/STOSB")
feature(invpcid,         7, 0, ebx, 10, "INVPCID instruction")
feature(rtm,             7, 0, ebx, 11, "Transactional Synchronization Extensions")
feature(rdt_m,           7, 0, ebx, 12, "Resource Director Technology Monitoring")
feature(dfpucsds,        7, 0, ebx, 13, "Deprecates FPU CS and FPU DS")
feature(mpx,             7, 0, ebx, 14, "Memory Protection Extensions")
feature(rdt_a,           7, 0, ebx, 15, "Resource Director Technology Allocation")
feature(avx512f,         7, 0, ebx, 16, "AVX-512 Foundation")
feature(avx512dq,        7, 0, ebx, 17, "AVX-512 Doubleword and Quadword Instructions")
feature(rdseed,          7, 0, ebx, 18, "RDSEED instruction")
feature(adx,             7, 0, ebx, 19, "Add-Carry Instruction Extensions")
feature(smap,            7, 0, ebx, 20, "Supervisor Mode Access Prevention")
feature(avx512imfa,      7, 0, ebx, 21, "AVX-512 Integer Fused Multiply-Add Instructions")
feature(pcommit,         7, 0, ebx, 22, "PCOMMIT instruction")
feature(clflushopt,      7, 0, ebx, 23, "CLFLUSHOPT instruction")
feature(clwb,            7, 0, ebx, 24, "CLWB instruction")
feature(intel_pt,        7, 0, ebx, 25, "Intel Processor Tracec")
feature(avx512pf,        7, 0, ebx, 26, "AVX-512 Prefetch Instructions")
feature(avx512er,        7, 0, ebx, 27, "AVX-512 Exponential and Reciprocal Instructions")
feature(avx512cd,        7, 0, ebx, 28, "AVX-512 Conflict Detection Instructions")
feature(sha,             7, 0, ebx, 29, "Intel SHA extensions")
feature(avx512bw,        7, 0, ebx, 30, "AVX-512 Byte and Word Instructions")
feature(avx512vl,        7, 0, ebx, 31, "AVX-512 Vector Length Extensions")

/* eax=0x00000007; ecx */
feature(prefetchwt1,     7, 0, ecx, 0, "PREFETCHWT1 instruction")
feature(avx512vbmi,      7, 0, ecx, 1, "AVX-512 Vector Bit Manipulation Instructions")
feature(umip,            7, 0, ecx, 2, "User-mode Instruction Prevention")
feature(pku,             7, 0, ecx, 3, "Memory Protection Keys for User-mode pages")
feature(ospke,           7, 0, ecx, 4, "PKU enabled by OS")
feature(waitpkg,         7, 0, ecx, 5, "User Level Monitor Wait")
feature(avx512vbmi2,     7, 0, ecx, 6, "AVX-512 Vector Bit Manipulation Instructions 2")
feature(cet_ss,          7, 0, ecx, 7, "Control Flow Enforcement Sbadow Stack")
feature(gfni,            7, 0, ecx, 8, "Galois Field instructions")
feature(vaes,            7, 0, ecx, 9, "Vector AES instruction set (VEX-256/EVEX)")
feature(vpclmulqdq,      7, 0, ecx, 10, "CLMUL instruction set (VEX-256/EVEX)")
feature(avx512vnni,      7, 0, ecx, 11, "AVX-512 Vector Neural Network Instructions")
feature(avx512bitalg,    7, 0, ecx, 12, "AVX-512 BITALG instructions")
feature(tme,             7, 0, ecx, 13, "Total Memory Encryption")
feature(avx512vpopcntdq, 7, 0, ecx, 14, "AVX-512 Vector POPCNt Doubleword and Quadword")
feature(la57,            7, 0, ecx, 16, "Supports 57-bit linear addresses and five-level paging")
feature(mawau1,          7, 0, ecx, 17, "MPX Address-Width Adjust 1")
feature(mawau2,          7, 0, ecx, 18, "MPX Address-Width Adjust 2")
feature(mawau3,          7, 0, ecx, 19, "MPX Address-Width Adjust 3")
feature(mawau4,          7, 0, ecx, 20, "MPX Address-Width Adjust 4")
feature(mawau5,          7, 0, ecx, 21, "MPX Address-Width Adjust 5")
feature(rdpid,           7, 0, ecx, 22, "Read Processor ID")
feature(kl,              7, 0, ecx, 23, "Key Locker")
feature(cldemote,        7, 0, ecx, 25, "Cache Line Demote")
feature(movdiri,         7, 0, ecx, 27, "Move Doubleword as Direct Store")
feature(movdir64b,       7, 0, ecx, 28, "Move 64 Bytes as Direct Store")
feature(enqcmd,          7, 0, ecx, 29, "Enqueue Command")
feature(sgx_lc,          7, 0, ecx, 30, "SGX Launch Configuration")
feature(pks,             7, 0, ecx, 31, "Protection Keys")

/* eax=0x00000007; edx */
feature(sgx_keys,        7, 0, edx, 1, "Attestation Services for SGX")
feature(avx512_4vnniw,   7, 0, edx, 2, "AVX-512 4-register Neural Network Instructions")
feature(avx512_4fmaps,   7, 0, edx, 3, "AVX-512 4-register Multiply Accumulation Single precision")
feature(fsrm,            7, 0, edx, 4, "Fast Short REP MOV")
feature(uintr,           7, 0, edx, 5, "User Interrupts")
feature(avx512_vp2inter, 7, 0, edx, 8, "AVX-512 VP2INTERSECT")
feature(srbds_ctrl,      7, 0, edx, 9, "Support for IA32_MCU_OPT_CTRL MSR")
feature(md_clear,        7, 0, edx, 10, "MD_CLEAR supported")
feature(rtm_always_abort,7, 0, edx, 11, "Execution of XBEGIN immediately aborts")
feature(rtm_force_abort, 7, 0, edx, 13, "Support for IA32_TSX_FORCE_ABORT MSR")
feature(serialize,       7, 0, edx, 14, "Serialize Instruction Execution")
feature(hybrid,          7, 0, edx, 15, "Mixture of CPU types")
feature(tsxldtrk,        7, 0, edx, 16, "TSX suspend load address tracking")
feature(pconfig,         7, 0, edx, 18, "Platform configuration (Memory Encryption)")
feature(cet_ibt,         7, 0, edx, 20, "Control Flow Enforcement Indirect Branch Tracking")
feature(amx_bf16,        7, 0, edx, 22, "AMX Tile computation on bfloat16")
feature(avx512_fp16,     7, 0, edx, 23, "AVX-512 FP16 half-precision floating-point")
feature(amx_tile,        7, 0, edx, 24, "AMX Tile architecture")
feature(amx_int8,        7, 0, edx, 25, "AMX Tile computation on 8-bit integers")
feature(spec_ctrl_ibrs,  7, 0, edx, 26, "Indirect Branch Speculation Control IBRS/IBPB")
feature(spec_ctrl_stibp, 7, 0, edx, 27, "Single Thread Indirect Branch Predictor (STIBP)")
feature(l1d_flush,       7, 0, edx, 28, "L1D_FLUSH support")
feature(arch_cap,        7, 0, edx, 29, "Support for IA32_ARCH_CAPABILITIES MSR")
feature(core_cap,        7, 0, edx, 30, "Support for IA32_CORE_CAPABILITIES MSR")
feature(ssbd,            7, 0, edx, 31, "Speculative Store Bypass Disable")

/* eax=0x00000007; ecx=1; edx */
feature(rao_int,         7, 1, edx, 3, "RAO-INT instructions")
feature(avx_vnni,        7, 1, edx, 4, "AVX VNNI")
feature(avx512_bf16,     7, 1, edx, 5, "AVX-512 bfloat16")
feature(lass,            7, 1, edx, 6, "Linear Address Space Separation")
feature(cmpccxadd,       7, 1, edx, 7, "CMPCCXADD instruction")
feature(archperfmonext,  7, 1, edx, 8, "Architectural Performance Monitoring Extended")
feature(fsrmovsb,        7, 1, edx, 10, "Fast Short REP MOVSB")
feature(fsrstosb,        7, 1, edx, 11, "Fast Short REP STOSB")
feature(fsrcmpsb,        7, 1, edx, 12, "Fast Short REP CMPSB/SCASB")
feature(wrmsrns,         7, 1, edx, 19, "Write Model Specific Registers Non Serializing")
feature(amx_fp16,        7, 1, edx, 21, "AMX-FP16 instructions")
feature(hreset,          7, 1, edx, 22, "Processor History Reset")
feature(avx_ifma,        7, 1, edx, 25, "AVX-IFMA instructions")
feature(lam,             7, 1, edx, 26, "Linear Address Masking")
feature(msrlist,         7, 1, edx, 27, "Read and Write List of Model Specific Registers")

/* eax=0x0000000D; ecx=1; eax */
feature(xsaveopt,        7, 1, edx, 0, "XSAVEOPT instruction")
feature(xsavec,          7, 1, edx, 1, "XSAVEC instruction")
feature(xgetbv1,         7, 1, edx, 2, "XGETBV with ECX=1 instruction")
feature(xsaves,          7, 1, edx, 3, "XSAVES/XRSTORS instructions")
feature(xfd,             7, 1, edx, 4, "Extended Feature Disabling")

/* eax=0x0000000F; edx */
feature(rdt_m_l3,        15, 0, edx, 1, "Supports L3 Cache RDT Monitoring")

/* eax=0x0000000F; ecx=1; edx */
feature(rdt_m_l3_occ,    15, 1, edx, 0, "Supports L3 Occupancy Monitoring")
feature(rdt_m_l3_tbw,    15, 1, edx, 1, "Supports L3 Total Bandwidth monitoring")
feature(rdt_m_l3_lbw,    15, 1, edx, 2, "Supports L3 Local Bandwidth monitoring")

/* eax=0x00000010; edx */
feature(rdt_a_l3,        16, 0, ebx, 1, "Supports L3 Cache Allocation Technology")
feature(rdt_a_l2,        16, 0, ebx, 2, "Supports L2 Cache Allocation Technology")
feature(rdt_a_m,         16, 0, ebx, 3, "Supports Memory Bandwidth Allocation")

/* eax=0x00000010; ecx=1; edx */
feature(cdp,             16, 1, ecx, 2, "Code and Data Prioritization Technology")

/* eax=0x80000001; ecx */
feature(lahf_lm,         0x80000001, 0, ecx, 0, "LAHF/SAHF in long mode")
feature(lzcnt,           0x80000001, 0, ecx, 5, "LZCNT instruction")
feature(prefetchw,       0x80000001, 0, ecx, 8, "PREFETCHW instruction")

/* eax=0x80000001; edx */
feature(syscall,         0x80000001, 0, edx, 11, "SYSCALL and SYSRET instructions")
feature(nx,              0x80000001, 0, edx, 20, "No Execute")
feature(pdpe1gb,         0x80000001, 0, edx, 26, "Gigabyte pages")
feature(rdtscp,          0x80000001, 0, edx, 27, "RDTSCP instruction")
feature(lm,              0x80000001, 0, edx, 29, "Long mode")

/* eax=0x80000007; edx */
feature(invtsc,          0x80000007, 0, edx, 8, "Invariant TSC")
